SESSION-2 
TASK-2 
--QUESTION-1 - 
USE TEST_SQL
--IMPORT
SELECT * FROM MED_AUSTRALIA

IMPORTED TO DATABASE TEST_SQL WITH TABLE NAME MED_AUSTRALIA

--QUESTION-2
--GET THE NUMBER OF RECORDS IN THE TABLE
SELECT COUNT(*) RECORDS FROM MED_AUSTRALIA;
NUMBER OF RECORDS=5112

--GET THE NUMBER OF COLUMNS IN THE TABLE
SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME='MED_AUSTRALIA';
NUMBER OF COLUMNS=11

--GET THE DISTINCT VALUES OF STATE_CODE
SELECT  DISTINCT STATE_CODE FROM MED_AUSTRALIA;
DISTINCT VALUES ARE NT,VIC,WA,SA,QLD,ACT,NSW

SELECT  COUNT (DISTINCT STATE_CODE) FROM MED_AUSTRALIA;
COUNT IS 7

--GET COUNT OF DISTINCT VALUES OF COMPANY,STATE_CODE AND GENDER FIELDS TOGETHER
SELECT COUNT(DISTINCT COMPANY),
COUNT(DISTINCT STATE_CODE),
COUNT(DISTINCT GENDER)
FROM MED_AUSTRALIA;

--SELECT TOP 100 RECORDS FROM THE TABLE
SELECT TOP 100 * FROM MED_AUSTRALIA;

GET THE COUNT OF NULL VALUES IN THE COLUMN CONTACT_PREF
SELECT * FROM MED_AUSTRALIA

select count(*)CONTACT_PREF from MED_AUSTRALIA where CONTACT_PREF is NULL;


--SELECT TOP 70% OF RECORDS FROM THE TABLE
SELECT TOP 70 PERCENT * FROM MED_AUSTRALIA;

--DESCRIBE THE TABLE BY NUMBER OF COLUMNS AND FIELD DATA TYPES
SELECT * FROM INFORMATION_SCHEMA.COLUMNS;

--SELECT 1000 RANDOM RECORDS FROM THE TABLE
SELECT TOP 1000 * FROM MED_AUSTRALIA ORDER BY NEWID();

QUESTION-3 
CREATE A NEW TABLE AS MED_SELECT_V1 FROM MED_ASUTRALIA BY

SELECT * FROM MED_AUSTRALIA;
USE TEST_SQL
--MED_SELECT_V1
SELECT
CUSTOMER_ID,
COMPANY,
GENDER,
AGE,
STATE_CODE,
TOWN,
NO_OF_TRIPS,
[SPENT AMOUNT]
INTO MED_SELECT_V1
FROM MED_AUSTRALIA;

SELECT * FROM MED_SELECT_V1;

--RENAME FIELDS AS

SELECT
CUSTOMER_ID AS SUB_ID,
COMPANY AS BUSINESS_HOUSE,
GENDER,
AGE,
STATE_CODE AS PROVINCE,
TOWN,
NO_OF_TRIPS,
[SPENT AMOUNT] AS SPENT
INTO MED_SELECT_V2
FROM MED_SELECT_V1;
SELECT * FROM MED_SELECT_V2;


QUESTION-4 
CREATE A NEW TABLE FROM MED_SELECT_V1 TO MED_SELECT_V3

SELECT * FROM MED_SELECT_V2
SELECT 
SUB_ID,
BUSINESS_HOUSE,
GENDER,
AGE,
PROVINCE,
NO_OF_TRIPS,
SPENT
INTO MED_SELECT_V3
FROM MED_SELECT_V2
WHERE BUSINESS_HOUSE IN ('APOLLO','GENO','RELEGARE') AND GENDER IN ('FEMALE','MALE') AND 
PROVINCE IN ('ACT','NSW','WA','QLD') AND SPENT>=500;

SELECT * FROM MED_SELECT_V3;

HENCE, WE CANNOT APPLY (CARD_REG_DATE between 01/12/2006 and 31/12/2007 CONDITION) IN Q4 QUESTION 
  AS IN Q3 QUESTION WE CREATED TABLE AS MED_SELECT_V1 FROM MED_AUSTRALIA  WHERE CARD_REG_DATE IS NOT PRESENT

--QUESTION-5 
--CREATE A NEW TABLE FROM MED_SELECT_V1 TO MED_SELECT_V4
SELECT * FROM MED_SELECT_V1;

SELECT
CUSTOMER_ID,
COMPANY,
GENDER,
AGE,
STATE_CODE,
TOWN,
NO_OF_TRIPS,
[SPENT AMOUNT]
INTO MED_SELECT_V41
FROM MED_SELECT_V1
WHERE TOWN LIKE 'B%' AND GENDER= 'FEMALE' AND AGE BETWEEN 30 AND 70;

SELECT * FROM MED_SELECT_V41;

QUESTION- 6 
CREATE A NEW TABLE FROM MED_SELECT_V1 TO MED_SELECT_V5
SELECT * FROM MED_SELECT_V1;
SELECT
CUSTOMER_ID,
COMPANY,
GENDER,
STATE_CODE,
[SPENT AMOUNT]
INTO MED_SELECT_V5
FROM MED_SELECT_V1
ORDER BY STATE_CODE,COMPANY,GENDER,[SPENT AMOUNT] DESC;

SELECT * FROM MED_SELECT_V5 ORDER BY STATE_CODE,COMPANY,GENDER,[SPENT AMOUNT] DESC;
 ;



TASK-3 
QUESTION-1
CREATE A NEW TABLE MED_SELECT_V6 AND ADD THE FOLLOING COLUMNS AS	
AGE_BUCKET	
	LESS THAN 30
	30 TO 50
	51 TO 70
	70+
SPENT_BUCKET	
	LESS THAN 300
	301 TO 500
	501 TO 700
	701 TO 1000
	1000+
CUSTOMER_SEGMENT	
IF AGE BETWEEN 30 AN 70 AND GENDER=FEMALE AND SPENT_AMOUNT >=300	PREMIER
IF AGE BETWEEN 30 AN 70 AND GENDER=MALE AND SPENT_AMOUNT >=300	PREMIER
ELSE 	NON-PREMIER

CREATE DATABASE MEDICAL_BASE;

SELECT * FROM MED_SELECT_V6;

SELECT
CUSTOMER_ID AS SUB_ID,
COMPANY AS BUSINESS_HOUSE,
CARD_REG_DATE,
GENDER,
AGE,
CASE 
    WHEN AGE>70 THEN 'OLD-AGE'
	WHEN AGE>=51 THEN 'MID-AGE'
	WHEN AGE>=30 THEN'MID-YOUNG AGE'
	ELSE 'YOUNG-AGE'
	END AS AGE_BUCKET,
	STATE_CODE AS PROVINCE,
	TOWN,
	NO_OF_TRIPS,
	CONTACT_PREF,
	[SPENT AMOUNT],
	CASE
	WHEN [SPENT AMOUNT]>1000 THEN 'VERY-HIGH'
	WHEN [SPENT AMOUNT]>=701 THEN 'HIGH'
	WHEN [SPENT AMOUNT]>=501 THEN 'MID'
	WHEN [SPENT AMOUNT]>=301 THEN 'LOW'
	ELSE 'VERY-LOW'
END AS SPENT_BUCKET,
CASE 
   WHEN AGE BETWEEN 30 AND 70 AND GENDER = 'FEMALE' AND [SPENT AMOUNT]>=300 THEN 'PREMIER'
    WHEN AGE BETWEEN 30 AND 70 AND GENDER = 'MALE' AND [SPENT AMOUNT]>=300 THEN 'PREMIER'
	ELSE 'NON-PREMIER'
	END AS CUSTOMER_SEGMENT
	INTO MED_SELECT_V_6
	FROM MED_SELECT_V6;


	SELECT * FROM MED_SELECT_V_6

QUESTION-2 
--GET THE VALUE AS GIVEN BELOW FROM MED_SELECT_V6

SELECT
COUNT (*) AS SUBS,
FORMAT(SUM(NO_OF_TRIPS), 'N0') AS VISITS,
FORMAT(SUM([SPENT AMOUNT]), 'C0') AS TOTAL_SPENT
FROM MED_SELECT_V_6;

QUESTION-3 
--GET THE VALUE AS GIVEN BELOW FROM MED_SELECT_V6

SELECT
COMPANY AS BUSINESS_HOUSE,
COUNT (*) AS SUBS,
FORMAT(SUM(NO_OF_TRIPS), 'N0') AS VISITS,
FORMAT(SUM([SPENT AMOUNT]), 'C0') AS TOTAL_SPENT
FROM MED_SELECT_V6
GROUP BY COMPANY;

--Q4	GET THE VALUE AS GIVEN BELOW FROM MED_SELECT_V6
SELECT
COMPANY,
GENDER,
COUNT (*) AS SUBS,
FORMAT(SUM(NO_OF_TRIPS), 'N0') AS VISITS,
FORMAT(SUM([SPENT AMOUNT]), 'C0') AS TOTAL_SPENT
FROM MED_SELECT_V6
GROUP BY COMPANY,GENDER
ORDER BY COMPANY,GENDER;

--Q5
SELECT
STATE_CODE,
COMPANY,
FORMAT(SUM([SPENT AMOUNT]),'C0') AS TOTAL_SPENT
FROM MED_SELECT_V6
WHERE STATE_CODE IN('QLD','VIC')
GROUP BY STATE_CODE,COMPANY
HAVING SUM([SPENT AMOUNT])>=2000
ORDER BY STATE_CODE,COMPANY;


--Q6
SELECT
BUSINESS_HOUSE AS COMPANY,
GENDER,
CUSTOMER_SEGMENT,
AGE_BUCKET,
COUNT (*) AS CUSTOMER_ID,
FORMAT(SUM(NO_OF_TRIPS), 'N0') AS SUM_OF_TRIPS,
FORMAT(SUM([SPENT AMOUNT]), 'C0') AS SUM_OF_SPENT
FROM MED_SELECT_V_6
GROUP BY BUSINESS_HOUSE,GENDER,CUSTOMER_SEGMENT,AGE_BUCKET;

--Q7 
SELECT
BUSINESS_HOUSE AS COMPANY,
GENDER,
CUSTOMER_SEGMENT,
AGE_BUCKET,
COUNT (*) AS CUSTOMER_ID,
FORMAT(SUM(NO_OF_TRIPS), 'N0') AS SUM_OF_TRIPS,
FORMAT(SUM([SPENT AMOUNT]), 'C0') AS SUM_OF_SPENT
FROM MED_SELECT_V_6
GROUP BY BUSINESS_HOUSE,GENDER,CUSTOMER_SEGMENT,AGE_BUCKET;

--Q8
SELECT COUNT(*) FROM MED_SELECT_V_6
WHERE CONTACT_PREF IS NULL;

OR 

SELECT COUNT (*) CONTACT_PREF FROM MED_SELECT_V_6
WHERE CONTACT_PREF IS NULL;   


TASK-5 
SELECT * FROM MED_SALES

Q1	FROM CUSTOMER_MONTHLY_SALES TABLE GET
	Q1+Q2+Q3+Q4 AS TOTAL SALES
SELECT
COMPANY,
CUSTOMER_ID,
(JAN+FEB+MAR) AS Q1,
(APR+MAY+JUN) AS Q2,
(JUL+AUG+SEP) AS Q3,
(OCT+NOV+DEC) AS Q4,
(JAN+FEB+MAR+APR+MAY+JUN+JUL+AUG+SEP+OCT+NOV+DEC) AS TOTAL_SALES
INTO MED_V2

FROM MED_SALES;
SELECT * FROM MED_V2

Q2
SELECT
COMPANY,
CUSTOMER_ID,
FORMAT(Q1/(TOTAL_SALES),'P0') AS [Q1%],
FORMAT(Q2/(TOTAL_SALES),'P0') AS [Q2%],
FORMAT(Q3/(TOTAL_SALES),'P0') AS [Q3%],
FORMAT(Q4/(TOTAL_SALES),'P0') AS [Q4%]
INTO MED_V8

FROM MED_V2;

SELECT * FROM MED_V8

SELECT * FROM MED_V2




TASK-7

QUESTION-1
--CONVERT ROWS INTO COLUMN
select
customer_id,
company,
JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC
from task_71
pivot(sum(sales) for month in (JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC)) AS X
ORDER BY customer_id;



QUESTION-2
--CONVERT ROWS INTO COLUMN

select
customer_id,
company,
[2010],[2011],[2012],[2013],[2014],[2015],[2016],[2017],[2018],[2019],[2020],[2021]
INTO MED_NIU
from MED_YEAR
pivot(SUM(sales) for month in([2010],[2011],[2012],[2013],[2014],[2015],[2016],[2017],[2018],[2019],[2020],[2021])) AS X
ORDER BY CUSTOMER_ID;
SELECT * FROM MED_NIU

CONVERTED COLUMNS TO ROWS
SELECT 
CUSTOMER_ID,
COMPANY,
MONTH,
SALES
INTO MED_TTT
FROM MED_NIU
UNPIVOT(SALES FOR MONTH IN([2010],[2011],[2012],[2013],[2014],[2015],[2016],[2017],[2018],[2019],[2020],[2021])) AS X;

SELECT * FROM MED_TTT







        
